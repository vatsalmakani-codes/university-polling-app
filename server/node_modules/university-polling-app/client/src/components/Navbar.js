import { useContext, useEffect, useRef, useState } from 'react';
import { FaBars, FaChartBar, FaChevronDown, FaHistory, FaPlusCircle, FaSignOutAlt, FaTimes, FaUser } from 'react-icons/fa';
import { Link, NavLink, useNavigate } from 'react-router-dom';
import { AuthContext } from '../context/AuthContext';
import './Navbar.css';

// The Logo component remains the same, it's already well-designed.
const Logo = () => (
  <svg width="32" height="32" viewBox="0 0 48 48" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M17 19.3137V42H9V19.3137C9 14.7228 12.5817 11 17 11V11" stroke="var(--primary-color)" strokeWidth="4" strokeLinecap="round" strokeLinejoin="round"/>
    <path d="M31 6V28.6863C31 33.2772 34.5817 37 39 37V37" stroke="var(--primary-color)" strokeWidth="4" strokeLinecap="round" strokeLinejoin="round"/>
    <path d="M17 11C21.4183 11 25 14.7228 25 19.3137V42H17V11Z" fill="var(--primary-color-translucent)" stroke="var(--primary-color)" strokeWidth="4" strokeLinecap="round" strokeLinejoin="round"/>
    <path d="M39 37C43.4183 37 47 33.2772 47 28.6863V6H39V37Z" fill="var(--primary-color-translucent)" stroke="var(--primary-color)" strokeWidth="4" strokeLinecap="round" strokeLinejoin="round"/>
  </svg>
);

const Navbar = () => {
  const { isAuthenticated, user, logout } = useContext(AuthContext);
  const navigate = useNavigate();
  const [isMobileMenuOpen, setMobileMenuOpen] = useState(false);
  const [isDropdownOpen, setDropdownOpen] = useState(false);
  const dropdownRef = useRef(null);
  const mobileMenuRef = useRef(null);

  const toggleMobileMenu = () => setMobileMenuOpen(prev => !prev);
  const toggleDropdown = () => setDropdownOpen(prev => !prev);

  const closeAllMenus = () => {
    setMobileMenuOpen(false);
    setDropdownOpen(false);
  };

  const handleLogout = () => {
    logout();
    closeAllMenus();
    navigate('/login');
  };

  // Close dropdown on click outside
  useEffect(() => {
    const handleClickOutside = (event) => {
      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {
        setDropdownOpen(false);
      }
    };
    document.addEventListener("mousedown", handleClickOutside);
    return () => document.removeEventListener("mousedown", handleClickOutside);
  }, [dropdownRef]);

  // Prevent body scroll when mobile menu is open
  useEffect(() => {
    document.body.style.overflow = isMobileMenuOpen ? 'hidden' : 'unset';
    return () => {
      document.body.style.overflow = 'unset';
    };
  }, [isMobileMenuOpen]);


  const authLinks = (
    <>
      <li className="nav-item">
        <NavLink to="/dashboard" className="nav-link" onClick={closeAllMenus}>Home</NavLink>
      </li>
      {user?.role === 'student' && (
        <li className="nav-item"><NavLink to="/my-history" className="nav-link" onClick={closeAllMenus}><FaHistory className="nav-link-icon"/> My History</NavLink></li>
      )}
      {user?.role === 'faculty' && (
        <li className="nav-item"><NavLink to="/create-poll" className="nav-link" onClick={closeAllMenus}><FaPlusCircle className="nav-link-icon"/> Create Poll</NavLink></li>
      )}
      {user?.role === 'admin' && (
        <li className="nav-item"><NavLink to="/admin" className="nav-link" onClick={closeAllMenus}><FaChartBar className="nav-link-icon"/> Dashboard</NavLink></li>
      )}
    </>
  );

  const guestLinks = (
    <>
      <li className="nav-item"><NavLink to="/" className="nav-link" onClick={closeAllMenus}>Home</NavLink></li>
    </>
  );
  

  
 
        const API_URL = 'http://localhost:5000';
  return (
    <header className="navbar-header">
      <nav className="navbar">
        <div className="navbar-container">
          <Link to={isAuthenticated ? "/dashboard" : "/"} className="navbar-logo" onClick={closeAllMenus}>
            <Logo />
            <span>PollingSys</span>
          </Link>

          {/* --- Desktop Menu --- */}
          <ul className="nav-menu">
            {isAuthenticated ? authLinks : guestLinks}
          </ul>

          {/* --- Actions (Right Side) --- */}
          <div className="nav-actions">
            {isAuthenticated ? (
              <div className="profile-container" ref={dropdownRef}>
                <button className="profile-trigger" onClick={toggleDropdown} aria-haspopup="true" aria-expanded={isDropdownOpen}>
                  <img src={user.profilePicture == '/uploads/default.png'? `https://api.dicebear.com/7.x/initials/svg?seed=${user.name}&backgroundColor=4e73df&fontSize=35&radius=50` : `${API_URL}${user.profilePicture}`} alt="User avatar" className="profile-avatar" />
                  <span className="profile-name-desktop">{user?.name.split(' ')[0]}</span>
                  <FaChevronDown className={`chevron-icon ${isDropdownOpen ? 'open' : ''}`} />
                </button>
                {isDropdownOpen && (
                  <div className="profile-dropdown">
                    <div className="dropdown-header">
                      <img src={user.profilePicture == '/uploads/default.png'? `https://api.dicebear.com/7.x/initials/svg?seed=${user.name}&backgroundColor=4e73df&fontSize=35&radius=50` : `${API_URL}${user.profilePicture}`} alt="User avatar" className="profile-avatar-dropdown" />
                      <div className="user-details">
                        <strong>{user?.name}</strong>
                        <span>{user?.email}</span>
                      </div>
                    </div>
                    <ul className="dropdown-menu">
                      <li><Link to="/profile" className="dropdown-link" onClick={closeAllMenus}><FaUser /> Profile Settings</Link></li>
                    </ul>
                    <div className="dropdown-footer">
                      <button className="dropdown-button" onClick={handleLogout}>
                        <FaSignOutAlt /> Logout
                      </button>
                    </div>
                  </div>
                )}
              </div>
            ) : (
              <div className="guest-actions">
                <NavLink to="/login" className="btn btn-secondary">Login</NavLink>
                <NavLink to="/register" className="btn btn-primary">Sign Up</NavLink>
              </div>
            )}
            
            {/* --- Mobile Menu Trigger --- */}
            <button className="mobile-menu-icon" onClick={toggleMobileMenu} aria-label="Open menu">
              <FaBars />
            </button>
          </div>
        </div>
      </nav>

      {/* --- Mobile Menu Panel --- */}
      <div className={`mobile-menu-panel ${isMobileMenuOpen ? 'is-open' : ''}`} ref={mobileMenuRef}>
        <div className="mobile-menu-header">
            <Link to={isAuthenticated ? "/dashboard" : "/"} className="navbar-logo" onClick={closeAllMenus}>
              <Logo />
              <span>PollingSys</span>
            </Link>
            <button className="mobile-menu-close" onClick={toggleMobileMenu} aria-label="Close menu">
              <FaTimes />
            </button>
        </div>
        <div className="mobile-menu-content">
          {isAuthenticated ? (
             <div className="mobile-user-card">
                <img src={`https://api.dicebear.com/7.x/initials/svg?seed=${user?.name}`} alt="avatar" className="profile-avatar" />
                <div className="mobile-user-info">
                  <strong>{user?.name}</strong>
                  <span>{user?.email}</span>
                </div>
              </div>
          ) : null}

          <ul className="mobile-nav-links">
            {isAuthenticated ? authLinks : guestLinks}
          </ul>

          <div className="mobile-menu-footer">
            {isAuthenticated ? (
                <>
                  <Link to="/profile" className="btn btn-block" onClick={closeAllMenus}><FaUser/> My Profile</Link>
                  <button className="btn btn-block btn-secondary" onClick={handleLogout}><FaSignOutAlt/> Logout</button>
                </>
            ) : (
               <>
                <NavLink to="/login" className="btn btn-block btn-secondary" onClick={closeAllMenus}>Login</NavLink>
                <NavLink to="/register" className="btn btn-block btn-primary" onClick={closeAllMenus}>Sign Up</NavLink>
              </>
            )}
          </div>
        </div>
      </div>
       {isMobileMenuOpen && <div className="mobile-menu-overlay" onClick={toggleMobileMenu}></div>}
    </header>
  );
};

export default Navbar;